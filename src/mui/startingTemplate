import React, { useEffect } from 'react'
import {useState} from 'react'
import Card from './Card'
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import FetchMovieDetails from './FetchMovieDetails'

const Upcoming = () => {


    const [movies,setMovies]  = useState([])
    const [loading,setLoading] = useState(true)
    const [currentPage,setCurrentPage] = useState(1)
    const moviePerPage = 20;
    
     const fetchDetails = async () => {

         try {
             const api_key = '2e9da9a3cfe6fb49043769ce9d3a74d8';
             const api = await fetch(`https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}`);
             const res = await api.json();

             let totalPages = res.total_pages 
             let allMovies = [...res.results]

             for(let page = 2; page <= totalPages; page++){
                 const api_key = '2e9da9a3cfe6fb49043769ce9d3a74d8'
                 const response = await fetch(`https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&page=${page}`)
                 const data = await response.json();
                 allMovies = [...allMovies, ...data.results]
             }

             setMovies(allMovies)
             setLoading(false)
         } catch (error) {
             console.log('Error', error)
             setLoading(false)
         }

     }

    const indexOfLastMovie = currentPage * moviePerPage
    const indexOfFirstMovie = indexOfLastMovie - moviePerPage
    const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie)

    const handlePrev = () => {
        if(currentPage > 1){
            setCurrentPage(currentPage - 1)
        }
    }

    const handleNext = () => {
        if(currentPage * moviePerPage < movies.length){
            setCurrentPage(currentPage + 1)
        }

    }
   
  return (
     <> 
    <div className= 'container'>   
      {
          loading ? (
            <div className='loader-container'>
                <div className = 'loader'></div>
            </div>
          ) : (
            currentMovies.map( (movie) => (
                <Card movie = {movie}/>
            ))
          )
      }     
    </div>

    <div>
        <Stack spacing={2} direction="row" className="bottom-Navbar">
          <Button variant="contained" onClick = {handlePrev} disabled = {currentPage === moviePerPage}>Prev</Button>
          <div>Page {currentPage}</div>
          <Button variant="contained" onClick = {handleNext} disabled = {currentPage * moviePerPage >= movies.length}>Next</Button>
        </Stack>
      </div>
    </>
  )
}

export default Upcoming
